import config from './config.js';

document.addEventListener("DOMContentLoaded", function() {
    const form = document.querySelector('.form');
    form.addEventListener('submit', function(e) {
        e.preventDefault();

        const formData = new FormData(form);
        const fileInput = form.querySelector('input[type="file"]');
        //formData.append('chat_id', config.telegramChatId);

        //const data = Object.fromEntries(formData.entries());

        const name = formData.get('username') || '-';
        const email = formData.get('mail') || '-';
        const telegram = formData.get('tg') || '-';
        const projectInfo = formData.get('projectInfo') || '-';

        const message = `üì©–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞! \n\n–ò–º—è: ${name} \n–ü–æ—á—Ç–∞: ${email} \n–¢–µ–ª–µ–≥—Ä–∞–º: ${telegram} \n–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞: ${projectInfo}`;

        if (fileInput.files[0]) {
            formData.append('chat_id', config.telegramChatId);
            formData.append('document', fileInput.files[0]);
            formData.append('caption', message);

            axios.post(`https://api.telegram.org/bot${config.telegramBotToken}/sendDocument`, formData)
                .then(response => {
                    console.log('–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: ', response);
                    alert('–§–æ—Ä–º–∞ –∏ —Ñ–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã');
                })
                .catch(error => {
                    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö: ', error);
                    alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö');
                });
        } else {
            axios.post(`https://api.telegram.org/bot${config.telegramBotToken}/sendMessage`, {
                chat_id: config.telegramChatId,
                text: message,
                parse_mode: 'HTML'
            })
            .then(response => {
                console.log('–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: ', response);
                alert('–§–æ—Ä–º–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞');
            })
            .catch(error => {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö: ', error);
                alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö');
            });
        }
    });
});